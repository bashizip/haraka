// Generated by R2O 1.0.Developped by Patrick Bashizi Mutuzi. All right reserved.

package pojos;


import com.pbash.r2o.dataAccess.DataObject;
import java.sql.*;
import java.util.ArrayList;


public class Cours extends DataObject{

private Integer idcours;
private String intitule;
private Integer ponderation;
private Integer titulaire;



public Cours(){

}


public Cours(Integer idcours,String intitule,Integer ponderation,Integer titulaire
){
this.idcours=idcours;
this.intitule=intitule;
this.ponderation=ponderation;
this.titulaire=titulaire;
}
public Integer  getIdcours(){
return this.idcours;
}
public String  getIntitule(){
return this.intitule;
}
public Integer  getPonderation(){
return this.ponderation;
}
public Integer  getTitulaire(){
return this.titulaire;
}
public void setIdcours(Integer idcours){
 this.idcours=idcours;
}
public void setIntitule(String intitule){
 this.intitule=intitule;
}
public void setPonderation(Integer ponderation){
 this.ponderation=ponderation;
}
public void setTitulaire(Integer titulaire){
 this.titulaire=titulaire;
}

public boolean create() throws Exception{
String createSQL="insert into Cours values(?,?,?,?)";
statement = cm.getConnexion().prepareStatement(createSQL);

boolean executed=false;
statement.setInt(1,idcours);
statement.setString(2,intitule);
statement.setInt(3,ponderation);
statement.setInt(4,titulaire);
executed=statement.execute();

return executed;
}

public void read(String keyValue) throws Exception{

String readSQL="select * from Cours where idCours=?";
statement = cm.getConnexion().prepareStatement(readSQL);
statement.setString(1,keyValue);
 ResultSet rst=statement.executeQuery();

while (rst.next()) {
this.setIdcours(rst.getInt(1));
this.setIntitule(rst.getString(2));
this.setPonderation(rst.getInt(3));
this.setTitulaire(rst.getInt(4));

}
}

public int update() throws Exception{
String updateSQL="update Cours set idcours=? , intitule=? , ponderation=? , titulaire=?  where idcours = ?";
statement = cm.getConnexion().prepareStatement(updateSQL);
statement.setInt(1,idcours);
statement.setString(2,intitule);
statement.setInt(3,ponderation);
statement.setInt(4,titulaire);
statement.setInt(5,idcours);
int rowafect=statement.executeUpdate();
return rowafect;
}
public ArrayList<DataObject> getAll() throws Exception {
ArrayList<DataObject> all = new ArrayList<DataObject>();
String allQuery = " select * from Cours";
statement = cm.getConnexion().prepareStatement(allQuery);
ResultSet rst = statement.executeQuery();
Cours anCours;
synchronized(all){
while (rst.next()) {
anCours= new Cours();
 anCours.setIdcours(rst.getInt(1));
 anCours.setIntitule(rst.getString(2));
 anCours.setPonderation(rst.getInt(3));
 anCours.setTitulaire(rst.getInt(4));
 all.add( anCours);

}return all;
}
}

public int delete(String key) throws Exception{
String deleteSQL = "delete from Cours where idcours = ?";
 statement = cm.getConnexion().prepareStatement(deleteSQL);
statement.setString(1, key);
int rowafect = statement.executeUpdate();
return rowafect;
}
}
