// Generated by R2O 1.0.Developped by Patrick Bashizi Mutuzi. All right reserved.

package pojos;


import com.pbash.r2o.dataAccess.DataObject;
import java.sql.*;
import java.util.ArrayList;


public class Promotion extends DataObject{

private String idpromotion;
private String commentaire;



public Promotion(){

}


public Promotion(String idpromotion,String commentaire
){
this.idpromotion=idpromotion;
this.commentaire=commentaire;
}
public String  getIdpromotion(){
return this.idpromotion;
}
public String  getCommentaire(){
return this.commentaire;
}
public void setIdpromotion(String idpromotion){
 this.idpromotion=idpromotion;
}
public void setCommentaire(String commentaire){
 this.commentaire=commentaire;
}

public boolean create() throws Exception{
String createSQL="insert into Promotion values(?,?)";
statement = cm.getConnexion().prepareStatement(createSQL);

boolean executed=false;
statement.setString(1,idpromotion);
statement.setString(2,commentaire);
executed=statement.execute();

return executed;
}

public void read(String keyValue) throws Exception{

String readSQL="select * from Promotion where idPromotion=?";
statement = cm.getConnexion().prepareStatement(readSQL);
statement.setString(1,keyValue);
 ResultSet rst=statement.executeQuery();

while (rst.next()) {
this.setIdpromotion(rst.getString(1));
this.setCommentaire(rst.getString(2));

}
}

public int update() throws Exception{
String updateSQL="update Promotion set idpromotion=? , commentaire=?  where idpromotion = ?";
statement = cm.getConnexion().prepareStatement(updateSQL);
statement.setString(1,idpromotion);
statement.setString(2,commentaire);
statement.setString(3,idpromotion);
int rowafect=statement.executeUpdate();
return rowafect;
}
public ArrayList<DataObject> getAll() throws Exception {
ArrayList<DataObject> all = new ArrayList<DataObject>();
String allQuery = " select * from Promotion";
statement = cm.getConnexion().prepareStatement(allQuery);
ResultSet rst = statement.executeQuery();
Promotion anPromotion;
synchronized(all){
while (rst.next()) {
anPromotion= new Promotion();
 anPromotion.setIdpromotion(rst.getString(1));
 anPromotion.setCommentaire(rst.getString(2));
 all.add( anPromotion);

}return all;
}
}

public int delete(String key) throws Exception{
String deleteSQL = "delete from Promotion where idpromotion = ?";
 statement = cm.getConnexion().prepareStatement(deleteSQL);
statement.setString(1, key);
int rowafect = statement.executeUpdate();
return rowafect;
}
}
