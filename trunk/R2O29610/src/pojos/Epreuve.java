// Generated by R2O 1.0.Developped by Patrick Bashizi Mutuzi. All right reserved.

package pojos;


import com.pbash.r2o.dataAccess.DataObject;
import java.sql.*;
import java.util.ArrayList;


public class Epreuve extends DataObject{

private Integer idepreuve;
private Integer session;
private Integer idcours;
private Integer idetudiant;
private Double cote_annee;
private Double cote_examen;



public Epreuve(){

}


public Epreuve(Integer idepreuve,Integer session,Integer idcours,Integer idetudiant,Double cote_annee,Double cote_examen
){
this.idepreuve=idepreuve;
this.session=session;
this.idcours=idcours;
this.idetudiant=idetudiant;
this.cote_annee=cote_annee;
this.cote_examen=cote_examen;
}
public Integer  getIdepreuve(){
return this.idepreuve;
}
public Integer  getSession(){
return this.session;
}
public Integer  getIdcours(){
return this.idcours;
}
public Integer  getIdetudiant(){
return this.idetudiant;
}
public Double  getCote_annee(){
return this.cote_annee;
}
public Double  getCote_examen(){
return this.cote_examen;
}
public void setIdepreuve(Integer idepreuve){
 this.idepreuve=idepreuve;
}
public void setSession(Integer session){
 this.session=session;
}
public void setIdcours(Integer idcours){
 this.idcours=idcours;
}
public void setIdetudiant(Integer idetudiant){
 this.idetudiant=idetudiant;
}
public void setCote_annee(Double cote_annee){
 this.cote_annee=cote_annee;
}
public void setCote_examen(Double cote_examen){
 this.cote_examen=cote_examen;
}

public boolean create() throws Exception{
String createSQL="insert into Epreuve values(?,?,?,?,?,?)";
statement = cm.getConnexion().prepareStatement(createSQL);

boolean executed=false;
statement.setInt(1,idepreuve);
statement.setInt(2,session);
statement.setInt(3,idcours);
statement.setInt(4,idetudiant);
statement.setDouble(5,cote_annee);
statement.setDouble(6,cote_examen);
executed=statement.execute();

return executed;
}

public void read(String keyValue) throws Exception{

String readSQL="select * from Epreuve where idEpreuve=?";
statement = cm.getConnexion().prepareStatement(readSQL);
statement.setString(1,keyValue);
 ResultSet rst=statement.executeQuery();

while (rst.next()) {
this.setIdepreuve(rst.getInt(1));
this.setSession(rst.getInt(2));
this.setIdcours(rst.getInt(3));
this.setIdetudiant(rst.getInt(4));
this.setCote_annee(rst.getDouble(5));
this.setCote_examen(rst.getDouble(6));

}
}

public int update() throws Exception{
String updateSQL="update Epreuve set idepreuve=? , session=? , idcours=? , idetudiant=? , cote_annee=? , cote_examen=?  where idepreuve = ?";
statement = cm.getConnexion().prepareStatement(updateSQL);
statement.setInt(1,idepreuve);
statement.setInt(2,session);
statement.setInt(3,idcours);
statement.setInt(4,idetudiant);
statement.setDouble(5,cote_annee);
statement.setDouble(6,cote_examen);
statement.setInt(7,idepreuve);
int rowafect=statement.executeUpdate();
return rowafect;
}
public ArrayList<DataObject> getAll() throws Exception {
ArrayList<DataObject> all = new ArrayList<DataObject>();
String allQuery = " select * from Epreuve";
statement = cm.getConnexion().prepareStatement(allQuery);
ResultSet rst = statement.executeQuery();
Epreuve anEpreuve;
synchronized(all){
while (rst.next()) {
anEpreuve= new Epreuve();
 anEpreuve.setIdepreuve(rst.getInt(1));
 anEpreuve.setSession(rst.getInt(2));
 anEpreuve.setIdcours(rst.getInt(3));
 anEpreuve.setIdetudiant(rst.getInt(4));
 anEpreuve.setCote_annee(rst.getDouble(5));
 anEpreuve.setCote_examen(rst.getDouble(6));
 all.add( anEpreuve);

}return all;
}
}

public int delete(String key) throws Exception{
String deleteSQL = "delete from Epreuve where idepreuve = ?";
 statement = cm.getConnexion().prepareStatement(deleteSQL);
statement.setString(1, key);
int rowafect = statement.executeUpdate();
return rowafect;
}
}
